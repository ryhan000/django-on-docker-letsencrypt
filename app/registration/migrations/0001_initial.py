# Generated by Django 3.0.7 on 2020-10-20 11:30

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import registration.models
import utils.file_utils
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='IdentityProvider',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='CreatedAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='UpdatedAt')),
                ('active_status', models.BooleanField(db_column='ActiveStatus', default=True)),
                ('id', models.UUIDField(db_column='IdentityProviderID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('app_id', models.CharField(db_column='AppId', max_length=256)),
                ('authorization_uri', models.URLField(db_column='AuthorizationURI')),
                ('access_token_uri', models.URLField(db_column='AccesstokenURI')),
                ('permission_scope', models.CharField(db_column='PermissionScope', max_length=400)),
                ('client_id', models.CharField(db_column='ClientID', max_length=256)),
                ('client_secret', models.CharField(db_column='ClientSecret', max_length=400)),
                ('authorization_response_type', models.CharField(db_column='AuthorizationResponseType', max_length=256)),
                ('access_grant_type', models.CharField(db_column='AccessGrantType', max_length=64)),
                ('return_uri', models.URLField(db_column='ReturnURI')),
                ('provider_branding', django.contrib.postgres.fields.jsonb.JSONField(db_column='ProviderBranding')),
                ('oauth_provider_tag', models.CharField(db_column='OauthProviderTag', max_length=64)),
                ('slug', models.SlugField(db_column='Slug')),
                ('social_linkable', models.BooleanField(db_column='SocialLinkable', default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='CreatedAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='UpdatedAt')),
                ('active_status', models.BooleanField(db_column='ActiveStatus', default=True)),
                ('id', models.UUIDField(db_column='ProfileID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(db_column='FirstName', max_length=64)),
                ('last_name', models.CharField(db_column='LastName', max_length=64)),
                ('date_of_birth', models.DateField(blank=True, db_column='DateOfBirth', null=True)),
                ('profile_picture_uri', models.ImageField(blank=True, db_column='ProfilePictureURI', null=True, upload_to=utils.file_utils.get_file_path, validators=[registration.models.file_size])),
                ('primary_email', models.CharField(db_column='PrimaryEmail', max_length=256)),
                ('primary_contact_number', models.CharField(blank=True, db_column='PrimaryContactNumber', max_length=16, null=True)),
                ('terms_accepted', models.BooleanField(db_column='TermsAccepted', default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='CreatedAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='UpdatedAt')),
                ('active_status', models.BooleanField(db_column='ActiveStatus', default=True)),
                ('id', models.UUIDField(db_column='StoreID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('course_provider_code', models.CharField(db_column='CourseProviderCode', max_length=64)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('url_slug', models.SlugField(db_column='URLSlug')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StoreIdentityProvider',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='CreatedAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='UpdatedAt')),
                ('active_status', models.BooleanField(db_column='ActiveStatus', default=True)),
                ('id', models.UUIDField(db_column='StoreIdentityProviderID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('identity_provider', models.ForeignKey(db_column='IdentityProviderID', on_delete=django.db.models.deletion.CASCADE, related_name='store_identity_providers', to='registration.IdentityProvider')),
                ('store', models.ForeignKey(db_column='StoreID', on_delete=django.db.models.deletion.CASCADE, related_name='store_identity_providers', to='registration.Store')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProfilePreference',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='CreatedAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='UpdatedAt')),
                ('active_status', models.BooleanField(db_column='ActiveStatus', default=True)),
                ('id', models.UUIDField(db_column='ProfilePreferenceID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('preference_type', models.CharField(db_column='PreferenceType', max_length=32)),
                ('preference_value', models.CharField(db_column='PreferenceValue', max_length=256)),
                ('profile', models.ForeignKey(db_column='ProfileID', on_delete=django.db.models.deletion.CASCADE, related_name='profile_preferences', to='registration.Profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProfileLink',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='CreatedAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='UpdatedAt')),
                ('active_status', models.BooleanField(db_column='ActiveStatus', default=True)),
                ('id', models.UUIDField(db_column='ProfileLinkID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('provider_profile_identity', models.CharField(db_column='ProviderProfileIdentity', max_length=128)),
                ('authorization_code', models.CharField(db_column='AuthorizationCode', max_length=400)),
                ('authorization_code_expiration', models.DateTimeField(db_column='AuthorizationCodeExpiration')),
                ('access_token', models.CharField(db_column='AccessToken', max_length=400)),
                ('access_token_expiration', models.DateTimeField(db_column='AccessTokenExpiration')),
                ('refresh_token', models.CharField(db_column='RefreshToken', max_length=400)),
                ('refresh_token_expiration', models.DateTimeField(db_column='RefreshTokenExpiration')),
                ('CSRF_token', models.CharField(db_column='CSRFToken', max_length=400)),
                ('auth_account_id', models.CharField(db_column='OauthAccountID', max_length=400)),
                ('identity_provider', models.ForeignKey(db_column='IdentityProviderID', on_delete=django.db.models.deletion.CASCADE, related_name='profile_links', to='registration.IdentityProvider')),
                ('profile', models.ForeignKey(db_column='ProfileID', on_delete=django.db.models.deletion.CASCADE, related_name='profile_links', to='registration.Profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProfileCommunicationMedium',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='CreatedAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='UpdatedAt')),
                ('active_status', models.BooleanField(db_column='ActiveStatus', default=True)),
                ('id', models.UUIDField(db_column='ProfileCommunicationMediumID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('medium_type', models.CharField(db_column='MediumType', max_length=32)),
                ('medium_value', models.CharField(db_column='MediumValue', max_length=256)),
                ('identity_provider', models.ForeignKey(db_column='IdentityProvider', on_delete=django.db.models.deletion.CASCADE, related_name='profile_communication_mediums', to='registration.IdentityProvider')),
                ('profile', models.ForeignKey(db_column='ProfileID', on_delete=django.db.models.deletion.CASCADE, related_name='profile_communication_mediums', to='registration.Profile')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
