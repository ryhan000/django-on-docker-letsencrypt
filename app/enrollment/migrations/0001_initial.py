# Generated by Django 3.0.7 on 2020-10-20 11:30

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('registration', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='CreatedAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='UpdatedAt')),
                ('active_status', models.BooleanField(db_column='ActiveStatus', default=True)),
                ('id', models.UUIDField(db_column='CartID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True, db_column='CreationTime')),
                ('last_update_time', models.DateTimeField(auto_now=True, db_column='LastUpdateTime')),
                ('cart_status', models.CharField(db_column='CartStatus', max_length=16)),
                ('cart_item_count', models.PositiveSmallIntegerField(db_column='CartItemCount')),
                ('cart_item_total', models.FloatField(db_column='CartItemTotal')),
                ('note', models.CharField(db_column='Note', max_length=16)),
                ('profile', models.ForeignKey(db_column='ProfileID', on_delete=django.db.models.deletion.CASCADE, related_name='carts', to='registration.Profile')),
                ('store', models.ForeignKey(db_column='StoreID', on_delete=django.db.models.deletion.CASCADE, related_name='carts', to='registration.Store')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Enrolment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='CreatedAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='UpdatedAt')),
                ('active_status', models.BooleanField(db_column='ActiveStatus', default=True)),
                ('id', models.UUIDField(db_column='PaymentGatewayID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=128)),
                ('course_id', models.UUIDField(db_column='CourseID', default=uuid.uuid4, editable=False)),
                ('section_id', models.UUIDField(db_column='SectionID', default=uuid.uuid4, editable=False)),
                ('enrolment_time', models.DateTimeField(db_column='EnrolmentTime')),
                ('application_time', models.DateTimeField(db_column='ApplicationTime')),
                ('enrolment_status', models.CharField(db_column='EnrolmentStatus', max_length=16)),
                ('profile', models.ForeignKey(db_column='ProfileID', on_delete=django.db.models.deletion.CASCADE, related_name='enrolments', to='registration.Profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='CreatedAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='UpdatedAt')),
                ('active_status', models.BooleanField(db_column='ActiveStatus', default=True)),
                ('id', models.UUIDField(db_column='OrderID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True, db_column='CreationTime')),
                ('last_update_time', models.DateTimeField(auto_now=True, db_column='LastUpdateTime')),
                ('closed_time', models.DateTimeField(blank=True, db_column='ClosedTime', null=True)),
                ('order_status', models.CharField(db_column='OrderStatus', max_length=16)),
                ('is_canceled', models.BooleanField(db_column='IsCanceled', default=False)),
                ('cancel_reason', models.CharField(blank=True, db_column='CancelReason', max_length=16, null=True)),
                ('total_item_count', models.PositiveSmallIntegerField(db_column='TotalItemCount')),
                ('total_amount', models.FloatField(db_column='TotalAmount')),
                ('payment_status', models.CharField(db_column='PaymentStatus', max_length=16)),
                ('note', models.CharField(db_column='Note', max_length=16)),
                ('cart', models.OneToOneField(db_column='CartID', on_delete=django.db.models.deletion.CASCADE, related_name='order', to='enrollment.Cart')),
                ('profile', models.ForeignKey(db_column='ProfileID', on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='registration.Profile')),
                ('store', models.ForeignKey(db_column='StoreID', on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='registration.Store')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentGateway',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='CreatedAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='UpdatedAt')),
                ('active_status', models.BooleanField(db_column='ActiveStatus', default=True)),
                ('id', models.UUIDField(db_column='PaymentGatewayID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=128)),
                ('library_version', models.CharField(blank=True, db_column='LibraryVersion', max_length=20, null=True)),
                ('last_update_date', models.DateField(blank=True, db_column='LastUpdateDate', null=True)),
                ('is_active', models.BooleanField(db_column='isActive', default=False)),
                ('library_path', models.FilePathField(allow_files=False, allow_folders=True, db_column='LibraryPath', path='/home/rayhan/campus/campus-identity-backend/app/payments')),
                ('class_name', models.CharField(blank=True, db_column='ClassName', max_length=30, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentGatewayConfig',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='CreatedAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='UpdatedAt')),
                ('active_status', models.BooleanField(db_column='ActiveStatus', default=True)),
                ('id', models.UUIDField(db_column='PaymentGatewayConfigID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=128)),
                ('config', django.contrib.postgres.fields.jsonb.JSONField(db_column='Config')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='CreatedAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='UpdatedAt')),
                ('active_status', models.BooleanField(db_column='ActiveStatus', default=True)),
                ('id', models.UUIDField(db_column='ProductID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('course_id', models.CharField(db_column='CourseID', max_length=256)),
                ('section_id', models.CharField(db_column='SectionID', max_length=256)),
                ('course_title', models.CharField(db_column='CourseTitle', max_length=256)),
                ('section_title', models.CharField(db_column='SectionTitle', max_length=256)),
                ('delivery_method', models.CharField(db_column='DeliveryMethod', max_length=256)),
                ('total_quantity', models.PositiveSmallIntegerField(db_column='TotalQuantity')),
                ('sale_quantity', models.PositiveSmallIntegerField(db_column='SaleQuantity')),
                ('reserved_quantity', models.PositiveSmallIntegerField(db_column='ReservedQuantity')),
                ('available_quantity', models.PositiveSmallIntegerField(db_column='AvailableQuantity')),
                ('is_expired', models.BooleanField(db_column='IsExpired', default=False)),
                ('store', models.ForeignKey(db_column='StoreID', on_delete=django.db.models.deletion.CASCADE, related_name='products', to='registration.Store')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StorePaymentGateway',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='CreatedAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='UpdatedAt')),
                ('active_status', models.BooleanField(db_column='ActiveStatus', default=True)),
                ('id', models.UUIDField(db_column='StorePaymentGatewayID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('branding', django.contrib.postgres.fields.jsonb.JSONField(db_column='Branding')),
                ('payment_gateway', models.ForeignKey(db_column='PaymentGatewayID', on_delete=django.db.models.deletion.CASCADE, related_name='store_payment_gateways', to='enrollment.PaymentGateway')),
                ('payment_gateway_config', models.ForeignKey(db_column='PaymentGatewayConfig', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='store_payment_gateways', to='enrollment.PaymentGatewayConfig')),
                ('store', models.ForeignKey(db_column='StoreID', on_delete=django.db.models.deletion.CASCADE, related_name='store_payment_gateways', to='registration.Store')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='CreatedAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='UpdatedAt')),
                ('active_status', models.BooleanField(db_column='ActiveStatus', default=True)),
                ('id', models.UUIDField(db_column='ReservationID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('creation_time', models.DateTimeField(db_column='CreationTime')),
                ('expiration_time', models.DateTimeField(db_column='ExpirationTime')),
                ('reservation_status', models.CharField(db_column='ReservationStatus', max_length=64)),
                ('product', models.ForeignKey(db_column='ProductID', on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='enrollment.Product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='CreatedAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='UpdatedAt')),
                ('active_status', models.BooleanField(db_column='ActiveStatus', default=True)),
                ('id', models.UUIDField(db_column='PaymentID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True, db_column='CreationTime')),
                ('last_update_time', models.DateTimeField(auto_now_add=True, db_column='LastUpdateTime')),
                ('is_paid', models.BooleanField(db_column='IsPaid', default=False)),
                ('payment_status', models.CharField(db_column='PaymentStatus', max_length=16)),
                ('note', models.CharField(db_column='Note', max_length=256)),
                ('order', models.ForeignKey(db_column='OrderID', on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='enrollment.Order')),
                ('payment_gateway', models.ForeignKey(db_column='PaymentGatewayID', on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='enrollment.PaymentGateway')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderStatusHistory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='CreatedAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='UpdatedAt')),
                ('active_status', models.BooleanField(db_column='ActiveStatus', default=True)),
                ('id', models.UUIDField(db_column='OrderStatusHistoryID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('previous_status', models.CharField(db_column='PreviousStatus', max_length=16)),
                ('present_status', models.CharField(db_column='PresentStatus', max_length=16)),
                ('update_time', models.DateTimeField(db_column='UpdateTime')),
                ('updated_by', models.CharField(db_column='UpdatedBy', max_length=64)),
                ('note', models.CharField(db_column='Note', max_length=256)),
                ('order', models.ForeignKey(db_column='OrderID', on_delete=django.db.models.deletion.CASCADE, related_name='order_status_histories', to='enrollment.Order')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='CreatedAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='UpdatedAt')),
                ('active_status', models.BooleanField(db_column='ActiveStatus', default=True)),
                ('id', models.UUIDField(db_column='OrderItemID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('item_description', models.CharField(db_column='ItemDescription', max_length=256)),
                ('creation_time', models.DateTimeField(db_column='CreationTime')),
                ('quantity', models.PositiveSmallIntegerField(db_column='Quantity')),
                ('unit_price', models.FloatField(db_column='UnitPrice')),
                ('item_total', models.FloatField(db_column='ItemTotal')),
                ('referral_code', models.CharField(db_column='ReferralCode', max_length=256)),
                ('order', models.ForeignKey(db_column='OrderID', on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='enrollment.Order')),
                ('product', models.ForeignKey(db_column='ProductID', on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='enrollment.Product')),
                ('reservation', models.OneToOneField(db_column='ReservationID', on_delete=django.db.models.deletion.CASCADE, related_name='order_item', to='enrollment.Reservation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EnrolmentStatusHistory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='CreatedAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='UpdatedAt')),
                ('active_status', models.BooleanField(db_column='ActiveStatus', default=True)),
                ('id', models.UUIDField(db_column='EnrolmentStatusID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('previous_status', models.CharField(db_column='PreviousStatus', max_length=16)),
                ('present_status', models.CharField(db_column='PresentStatus', max_length=16)),
                ('update_by', models.CharField(db_column='UpdateBy', max_length=256)),
                ('update_time', models.DateTimeField(db_column='UpdateTime')),
                ('application_time', models.DateTimeField(db_column='ApplicationTime')),
                ('erp_request', django.contrib.postgres.fields.jsonb.JSONField(db_column='ERPRequest')),
                ('erp_request_code', models.CharField(db_column='ERPResponseCode', max_length=16)),
                ('erp_response', django.contrib.postgres.fields.jsonb.JSONField(db_column='ERPResponse')),
                ('enrolment', models.ForeignKey(db_column='EnrolmentID', on_delete=django.db.models.deletion.CASCADE, related_name='enrolment_status_histories', to='enrollment.Enrolment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='CreatedAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='UpdatedAt')),
                ('active_status', models.BooleanField(db_column='ActiveStatus', default=True)),
                ('id', models.UUIDField(db_column='CartItemID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('item_description', models.CharField(db_column='ItemDescription', max_length=64)),
                ('creation_time', models.DateTimeField(auto_now_add=True, db_column='CreationTime')),
                ('quantity', models.PositiveSmallIntegerField(db_column='Quantity')),
                ('unit_price', models.PositiveSmallIntegerField(db_column='UnitPrice')),
                ('item_total', models.FloatField(db_column='ItemTotal')),
                ('item_status', models.CharField(db_column='ItemStatus', max_length=16)),
                ('referral_code', models.CharField(db_column='ReferralCode', max_length=128)),
                ('cart', models.ForeignKey(db_column='CartID', on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='enrollment.Cart')),
                ('product', models.ForeignKey(db_column='ProductID', on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='enrollment.Product')),
                ('reservation', models.OneToOneField(db_column='ReservationID', on_delete=django.db.models.deletion.CASCADE, related_name='cart_item', to='enrollment.Reservation')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
